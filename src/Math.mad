import {} from "Compare"
import __Math from "Math"
import {} from "Number"



minimum :: Integer -> Integer -> Integer
export minimum = (m, x) => x < m ? m : x

isEven :: Integer -> Boolean
export isEven = (x) => __Math.mod(x, 2) == 0

makeOdd :: Integer -> Integer
export makeOdd = (x) => isEven(x) ? x + 1 : x

abs :: (Comparable a, Number a) => a -> a
export abs = (x) => x < 0 ? x * -1 : x

PI :: Float
PI = 3.14159265358979323846

DEGREES :: Float
DEGREES = 180 / PI

rad2deg :: Float -> Float
export rad2deg = (rad) => rad * DEGREES

deg2rad :: Float -> Float
export deg2rad = (deg) => deg / DEGREES

#iftarget js

atan2 :: Number a => a -> a -> a
export atan2 = (a, b) => #- {
  return Math.atan2(a, b)
} -#

cos :: Number a => a -> Float
export cos = (x) => #- {
  return Math.cos(x)
} -#

sin :: Number a => a -> a
export sin = (x) => #- {
  return Math.sin(x)
} -#

#endif
